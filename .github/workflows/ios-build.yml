name: iOS Build IPA

on:
  push:
    branches: [ main ]

jobs:
  build-ipa:
    runs-on: macos-15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode 16.2
      run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Generate Flutter iOS files
      run: flutter precache --ios
        
    - name: Setup iOS certificates and provisioning profiles
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/
        
    - name: Install CocoaPods dependencies
      run: |
        cd ios
        pod install --repo-update
        
    - name: Build iOS
      run: flutter build ios --release --no-simulator
        
    - name: Create IPA with Embedded Provisioning Profile
      run: |
        cd build/ios/iphoneos
        
        # Find the provisioning profile file
        PROFILE_FILE=$(find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" | head -1)
        
        echo "Using provisioning profile: $PROFILE_FILE"
        
        # Copy the provisioning profile INSIDE the app bundle as embedded.mobileprovision
        cp "$PROFILE_FILE" Runner.app/embedded.mobileprovision
        
        # Verify the file was copied correctly
        if [ -f Runner.app/embedded.mobileprovision ]; then
          echo "‚úÖ Embedded provisioning profile successfully added"
          ls -la Runner.app/embedded.mobileprovision
        else
          echo "‚ùå Failed to embed provisioning profile"
          exit 1
        fi
        
        # Create the IPA structure
        mkdir Payload
        cp -r Runner.app Payload/
        zip -r TeamMates.ipa Payload/
        
        # Verify IPA was created
        echo "IPA created successfully:"
        ls -la TeamMates.ipa
        
    - name: Upload IPA as Downloadable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: TeamMates-iOS-App
        path: build/ios/iphoneos/TeamMates.ipa
        retention-days: 30
        
    - name: Clean up keychain
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true

    - name: Build Summary
      run: |
        echo "üéâ Build completed successfully!"
        echo "üì± Download your IPA from the Artifacts section below"
        echo "üìÖ Available for 30 days"